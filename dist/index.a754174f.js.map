{"mappings":"AAAA,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAM;AACjD,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAQ;AACpD,KAAK,CAAC,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAM;AACpD,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAM;AAEhD,UAAU,CAAC,gBAAgB,CAAC,CAAQ,gBAAS,KAAK,GAAK,CAAC;IACtD,KAAK,CAAC,cAAc;IAEtB,KAAK,CAAC,MAAM,GAAG,CAAO;IACtB,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,kBAAkB,CAAC,WAAW,CAAC,KAAK;IAC9I,EAAE,EAAE,WAAW,CAAC,KAAK,CAAC,IAAI,OAAO,CAAE,GAEjC,KAAK,CAAC,CAAwB;SAG9B,GAAG,CAAC,CAAC;QACH,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG;QAE3B,KAAK,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAElC,GAAG,CAAE,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,GAAI,CAAC;YACpD,KAAK,CAAC,CAAC,CAAA,aAAa,GAAE,aAAa,GAAE,EAAE,GAAE,UAAU,GAAE,YAAY,GAAE,KAAK,EAAA,CAAC,GAAG,OAAO,CAAC,KAAK;YACzF,GAAG,CAAC,MAAM,IAAI,mMAG8C,EAAE,aAAa,CAAC,qIAEjC,EAAE,aAAa,GAAG,aAAa,GAAG,KAAK,CAAC,uDAC1C,EAAE,UAAU,CAAC,mEACA,EAAE,YAAY,CAAC,6FACW,EAAE,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,mKAItF;YACf,cAAc,CAAC,SAAS,IAAI,MAAM;QAErC,CAAC;QACD,WAAW,CAAC,KAAK,GAAG,CAAE;IACxB,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;IAEjB,CAAC;AAIL,CAAC;SAEQ,YAAY,CAAC,EAAE,EAAE,IAAI,EAAC,CAAC;IAC9B,KAAK,CAAC,IAAI,GAAE,CAAC;QACX,EAAE;QACF,IAAI;IACN,CAAC;IAED,YAAY,CAAC,KAAK;IAClB,YAAY,CAAC,OAAO,CAAC,CAAM,OAAE,IAAI,CAAC,SAAS,CAAC,IAAI;AAClD,CAAC","sources":["src/pages/index.js"],"sourcesContent":["const searchForm = document.getElementById('form')\r\nconst searchInput = document.getElementById('search')\r\nconst movieListTitle = document.querySelector('.row')\r\nconst yearInput = document.getElementById('year')\r\n\r\nsearchForm.addEventListener('submit', async (event) => {\r\n  event.preventDefault()\r\n\r\nconst locale = 'en-US'\r\nconst url = `${process.env.MAIN_URL}/search/multi?api_key=${process.env.API_KEY}&language=${locale}&query=${encodeURIComponent(searchInput.value)}`\r\n  if (searchInput.value.trim() === '') {\r\n\r\n    alert(\"This field is required\")\r\n  } else {\r\n\r\n    try {\r\n      const res = await fetch(url);\r\n\r\n      const { results } = await res.json()\r\n\r\n      for (let index = 0; index < results.length; index++) {\r\n        const {backdrop_path, original_name, id, media_type, release_date, title} = results[index];\r\n        let output = `\r\n                    <div class=\"col-md-4 p-2\">\r\n                      <div class=\"card text-center\" style=\"max-width: 18rem;\">\r\n                        <img src=https://image.tmdb.org/t/p/original${backdrop_path} class=\"card-img-top\" alt=\"...\">\r\n                         <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">${original_name ? original_name : title}</h5>\r\n                            <p class=\"card-text\">${media_type}</p>\r\n                            <p class=\"card-text\">Release date ${release_date}</p>\r\n                            <a href=\"/media-details/index.html\"  onclick=\"getMovieData('${id}', '${media_type}')\" class=\"btn btn-primary\">Get more info </a>\r\n                          </div>\r\n                        </div>\r\n                     </div>\r\n                        `\r\n         movieListTitle.innerHTML += output\r\n\r\n      }\r\n      searchInput.value = \"\"\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nfunction getMovieData(id, type){\r\n  const data ={\r\n    id, \r\n    type\r\n  }\r\n\r\n  localStorage.clear()\r\n  localStorage.setItem('data', JSON.stringify(data));\r\n}"],"names":[],"version":3,"file":"index.a754174f.js.map","sourceRoot":"/__parcel_source_root/"}